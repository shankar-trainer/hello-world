git link  

https://github.com/shankar-trainer/hello-world/tree/cts_april_22/INTCDB22DX048_CoreJava/

structure oriented programming 
   --> variables 
   --> methods 



java is  object oriented programming 

    ---> lot of new features 
	---> structure oriented programming 
	---> inheritance 
	--->encapsulation
	--> ploymorphism
	--> abstraction 
	
	  java has inherited lot of the syntax from c and c++
	  -- supports all primitive data types 
	  
	  
	  java  -- platform independent 
	         -- two types of translator 
			    a)compiler 
				b)interpretter 
				
				compiler  -- javac   --filename.java-- after compilation -- filename.class
				interpretter -- java -- run the .class file 
				
				
				
				
		using any text editor like notepad can write java file 
        
      IDE  -- integrated development environment 

            -- more feature than text editor
            -- integrated compiler and interpretter
            --  syntax intellisence 
      eclipse, netbeans, intellij 
	  
				


    if else 
     loop 
	 
	 
	 
	 
	 primitive data type 
	 
	 
	   Integer  
	   
	   byte 
	   short 
	   int 
	   long 
	   
	   
	   char 
	   
	   float 
	   double 
	   
	   boolean 
	   
	   --- convert the char to int and int to char 
	   -- ASCII code 
	   
	   
	   Loop -- iterative statement woks till the condition is true;
	   
	   3 types of loop 
	     a) while loop
		          
				  counter variable 
				   
				   while(condition) // pre tested 
				      {
					  body 
					  }
	   
	   
	   pre tested
	   
	   
	   
	   User Input 
	   
	         Scanner -- present in java.util 
			 
			 methods 
			   .nextInt()-- input the integer
               .next()    -- String 
               .nextLine() -- multi words 

               .nextFloat()-- float 
				.nextDouble -- double
			   
			   
			   
			   
			   Class -- a collection of objects having same attributes and behaviour
			   
			    -- class is a conceptual entity 
				
				Employee 
				
				Student 
				
				    Any entity in the world is a class 
					
		     Object -- is instance/blueprint of class 
			           real entity 
					   
					   
					   class -- attributes and methods 
					          attributes
							  
							  
							Student 
                                 roll 
								 name 
								 subject 
                         attributes are denoted by variables 
						 
							  
    access modifier 
	
	   private -- with the class 
	   protected 
	   public 
	   default
	   
	   
	   
	   Encapsulation 
	   
	      all fields should be private in nature 
		  fields should be allowed using public getter/setter method
		  
		  bind code(method)+data(fields)---- encapsulation
		  
		  
		  static variable/method/block  
		     -- common 
			 
			 Country 
			 Company 
			 City

       static  -- single values to be shared by all objects
	   
       static  members are created before the object 
       no object is needed to access it 
       by classname.statuc members  --- can be accessed 	   
			 
				
			      
				  final  -- constant
				  
				  -- final variable
				  final method 
				  final class 
				 


  inheritance  
  
      one class can inherit the features from other class 
	    -- code reusability 
		
		
		private members are not inherited




Constructor 

    used to initialise the instance variable 

=================



java ---
  javac -- compiler  
java  -- interpretter 
hello.java -- javac -- hello.class

hello.class -- java interpretter

notepad , notepad++

IDE   -- integrated development environment 
netbeans
intellij 
eclipse -- more feature 
        integrated compiler, interpretter

syntax intellisence,   


java data types

primitive data types

  integer 
  
     byte 
	 short
	 int 
	 long 
	 
	 
	 char 
	 
	 boolean 
	 
	decimal 

     float  
    double 	-- default for all decimal 
	
	
	User Input 
	   Scanner   -- java.util
	     .nextInt()---- int
		 .next()---   string 
		 .nextLine()  multi word string 
		 .nextFloat() -- float 
		 

Encapsulation 

Inheritance 

    one class  inherit features/methods pf other non private class 

  super/parent/base 
    class which is inherited

  sub/child  class	
    class which inherits 
	
	 use exteds keyword to inherit 
	 
	 

  ResultSet -- multiple records 
            
			beforeFirst  default position -- no record 
            1st
            2
			3
          

			last 		 
            afterLast			


do all database operation in a separatae file 
this file can be used with any application 

DAO  -- data access object 




Collection 

    group of  classes as a singel unit with auto growable  size and 
    searching , sorting feature 	

    array -- size is fixed
             same data type 

    Collection -- size not fixed 
                  it is auto growable
                  group of any data type 
				  work with objects
                  searching and sorting 				  

     interfces 
        Set 
        List 
        Map 

    		 
			 Set
              Classes			 
			    -- hashset, linkedhashset, treeset 
			    -- no duplicate is allowed
                -- not ordered				
             List 			
			     -- it is ordered
				 -- supports index 
				 -- duplicate is allowed
				 
			    classes
                     Vector  --older, synchronised 
                     ArrayList -- new class, not synchronised 
                     LinkedList 
        Map 

		
				
	DAO   -- data access object
	       all data operation at                dao layer 
		   
	
	utility class 
	  Collections -- works with List
	     sort 
		 binarySearch 
	  
	  Arrays -- 
	          equals 
			  toString 
			  sort 
			  binarySearch
			  
			  
			  Comparable -- it is sued to sort the elements
			          java.lang 
    			      it has method compareTo(Object)
					  
					  All classes like Integer, Float, Double have implemented it 
					  It gives natural sorting 
					  
					  
			Comparator --		  
			         java.util
					 
					 comapare(Object obj1, Object obj2 )
					 
	  
	  
	  JDBC -- java  database connectivity 
	  
	  driver -- mysql driver 
	  
	  4 types of driver 
	  
	  best driver  is  thin driver 
	          -- fastest driver 
			  
			  
			  Steps 
			  
			  1. Load the Driver 
			         using DriverManager and Class.forName()
			  2. Get Connection
			  3. Execute Statement 
			  4. Get Result 
			  
			  
				
				ResultSet --  
				      
					  
					  beforeFirst  -- default position -- no record  
					  1
					  2
					  3
					  4
					  
					  
					  last
					  afterLast 
					  
				
			  Statement  -- executing sql statement 

               Sub class
              PreParedstatement --
			        -- faster 
					 -- precompiled 
					 --placeholder 
			 

        Procedure 
            1. without argument 
             2. with argument 
           Procedure doesnot return any values 
		   
		   get Values using out parameter 
		   
		   
	  
	
maven  -- is a build tool,
  using it you can compile 


ant---> maven -- build+project management tool 
               -- download the libraries using dependencies 
               -- set classpath, compile, run , test 

   gradle -- multi languga e support 


   maven  -- java  


J2EE   

  java 2 Enterprise application 

     
	 ejb is first world's enterprise application
	 
	 
	 
	 
	 
	 Maven 
	 
	     build tool +project management tool
		 
		 ant
		 
		 maven , gradle 
		 
		 apache maven 
		 
		 eclipse, netbeans, intellij
	

      maven life cycle 

      clean --- delete the target folder, download the dependency 

      compile -
      package
      test 
     install 	  -- install the packaged applicatiion (jar) to the local repository
	 
	 
	 
	 local repository -- after downloading dependency are added in local system 
	 remote repository
	 
	 
	 
	 Web Application 
	 Enterprise Application 
	      -- ejb 
		      -- heavy server 
			  -- paid by weblogic, ibm 
			

     rod johnson -- architect of ejb 

          spring 
		  
	 
	 
	Autowiring 
       -- automatically injection of the beans  should be autowired
	   



   build tool 
     ant 
     maven tool 
        -- build tool 
        -- project management tool
		
		-- command mode, eclipse, intellij
		
		-- create project, add dependencies, compile, set classpath, run, test
		
		
		
		

     gradle -- java, python, c, c++  		
	
	