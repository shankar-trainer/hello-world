


spring mvc 
       --   view .jsp -- sun microsystem 
	                    
		alternative of jsp thymeleaf 
     
  jsp  -- inside web-inf 
   
    thymeleaf is .html file with its tags 
     -- kept in resources 
	 


<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<link rel="stylesheet" type="text/css" media="all" 
          th:href="@{/style1.css}" />
<head>
<title>Title of the document</title>
</head>

   modelAtrribute  -- through out project just use same model attribute 
    

node js -- install

angular is basedon node js 

npm i -g @angular/cli   -- install angulat cli tool
  using this we can  create angular project 

angular project creation 
ng new Appname

to start the application 
ng serve 

start in browser 
 http://localhost:4200/  


new component is generated by 

ng generate component  component_name 

ng g c component_name
ng g c product


component selector is app-product -- present in product.component.ts 
add this component selector in default component(app.component.html)


pipe 
 ng g pipe Pipe 
 
 ng g pipe Exponent
 
 ng g service product
 
 
 Reactive form 
 
 
 App2>ng g c employee
  
 cd App2\src\app\employee>
 
 ng g class employee
 
 
 
 
 react 
 
 install 
 npm i create-react-app
 
 
 create application 
 
 npx create-react-app appname 
 
 cd appname

 npm start 
 
 localhost:3000
 
 
   vscode , eclipse, sublime_text 
   
    component 
	   1. Functional Component 
	   2. Class Based Component


    .css file 

    import .css file in your .js component file 


   bootsrtap 
  
npm i bootstrap 


in index.js   import 'bootstrap/dist/css/bootstrap.min.css'



props 
   cannot be changed 
   if not added then can have default props
  



Parent to child communication 

<Parent  childComponent=props>

Product is parent 
Cart is child 
 Product can send the data to the child using props 

 


  function  Product(){
     const items=[
        {id:'56454546','prdname':'shirt',cost:1200,'mfd':'12-01-2022'},
        {id:'56454547','prdname':'pant',cost:1500,'mfd':'12-02-2021'}
		]
	
	return(
        <div className="bg-dark text-info w-75 p-5 m-auto">
        <Cart itemList={items}></Cart>
        </div>
    )
  }
  
  
  
  conditional rendering 
  
  
  
  
  
  