corejava day1 assignment link
https://drive.google.com/file/d/1k4lNH4r-b2QH6Tt7M90kxrGJSlIMviaO/view?usp=sharing 


corejava day2 assignment link
https://drive.google.com/file/d/1q_bn5w1KYwx8cFCQ_UYcOrFpxSys4ehw/view?usp=sharing


github code link
https://github.com/shankar-trainer/hello-world/tree/lpu_batch1_22

slide link 
corejava 
https://drive.google.com/drive/folders/1M-dnYiUl287n7gVqex_G3wGODyRzctaO?usp=sharing





Eclipse ide 
   integrated development environment 
     

Jdk -- java devlopment kit 
   javac 
   java 
   
JRE
  Java Runtime Environment 
  
  
  Arrays 
  
   initialisation 
    1. int ar[]={1,2,3,4,5};
	2. int ar2[]=new int[6];// initialise ecah element with zero
	
  
  Structure Oriented Language 
   variables, methods 
   
   
   
   Capsule -- content is hidden

   Encapsulation 
        data -- hidden(private ) 
		public method(code)
		
    -- code (method )+ data     
   bind the code with data 
   
   
   
   access modifier 
      
	  private -- only inside the class 
	  default -- inside class, outside the class but inside package only 
	  protected --inside class, outside the class, outside package by inheritance
	  public  -- any where 
	  
	  
	  



  User Input -- java.util.Scanner  
    Scanner 
	     methods
               .nextInt() -- int 		 
               .nextFloat() -- float
               .next()  -- String 			   



Object oriented programming 

object -- real entity with attribute and behaviour 
        -- copy of attribute and behaviour
		
class  -- conceptual entity , collection of object 


 student1--  roll, name   |
 student2--  roll, name   |  \
 student3--  roll, name   |     class 
 student4--  roll, name   |  /


setter -- set the values 
	  constructor 
	  
	  2 types 
	    a) default constructor  -- no arguments 
		b) overloaded constructor (with arguments )


  overloaded constructor 
    -- it has parameters , so all object will be having differrent values 
	
	in a class 
	  single default constructor is allowed 
	  multiple overloaded constructor with differrent arguments is allowed
	  
	   using this() -- call the another constructor from the current constructor
	   



   instance variable -- all objects have one copy of instance variable, methods
   
     common value -- to be shared 
	 
	 static member
               for common variables 	 
	    country
		state 
		bank interest rate 
		
	 for static member object is not required 
      static members are present to the jvm before the creation of object 
	  
	  
	  non static method 
	       -- all static and non static can be used directly 
  
      static method 
          -- static members can be used directly
          -- non static members can be used using object 
		  
	  

   Composition 
      
     one class consists fo other classes
	 has a relationship 

     Employee has Address 
     Student has birthday 

  String class
    -- immutable in nature 
	-- string literla is object itself 
	
	 "hello"  -- string object 
	 
	 

   String literal -- String Pool   
   "hello"  ---      
   
   indexOf -- search the given String and if found it will return position
   

   int -------------- Integer 
   float ------------- Float 
   char --------------- character 
   
   Boxing -- converting primitive to warpper class
   
   
   inheritance 
   
    private -- not inherited 
	
	public, default, static  are inherited
	
	constructor  is not inherited 
	
  
   Overriding 
   -- changing the super class method in sub class 
   -- static method can be inherited but not overridden
   -- static method can be re written in the sub class 

   -- rules 
       --> overridding methods cannot have weaker access modifier  
       --> overridding methods must have same parameter and return type 	   
   
       |private
	   |default 
	   |protected 
	   |public 
	   v



  polymorphism 
      -- water 
	           gas,solid,cloud, liquid 
			   
		
  Person 
  
      --Passenger
	  --Father
      --Husband 
      --Employee 
	  --Customer 
	  
	two types 
      1. overloading 
      2.overridding


  Abstraction 
     class should have abstract/essential methods 
	 
	 abstract class -- 
	                 abstract method -- has no bod
					 concrete method 
					 
				only abstract class can have abstract method 
				abstract class cannot be instantiated 
				abstract class can be extended and then sub class can be instantiated 
				it has both static and non static/instance variable
				it  has constructor
	

   interface 
       java has no multiple inheritance.
	   
	   multiple inheritance is avaialable using interface 
	   
	   subclass can have more than one parent class
	   interface 100% abstract class 
	   
	   Person    Manager  
		|         / 
	    |        /
	    v       v
	interface Employee 
		
		--> it gives multiple inheritance
		--> all methods are public  and abstract 
		--> all variables are public static final 
		--> one interface can extends more than one interface 
		-->one class can extends only one class but can implement multiple 
		    interface 
			
	final 
        final variable -- constant 
        final method -- cannot be overridden
        final class -- can not be extended

    local variable -- only one modifier is allowed  final 
        


	
      	
	   
	   
	
int   --------------- Integer
float  ---------------Float 
char ---------------- Character 




java program ----code --- Exception instance-- throws -------   main -- program terminate 

java program ----code --- Exception instance-- throws -------   main - catch - program not  terminate 




program -- error -- trapped  -- catch block 

player1 throw ----------- palyer2--------    player3 

finally block is executed
  in either case 
a) if there is exception
b) if there is no exception 

  













	
	   
	   
	   
	   
        
				
				
				
				
				
				
	 
  
  
  
    
	  
	  
  	  




















	 
	  




	 
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  


	  
		
	     
		 
		 
	 
   

  
  
  