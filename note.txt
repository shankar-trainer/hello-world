corejava day1 assignment link
https://drive.google.com/file/d/1k4lNH4r-b2QH6Tt7M90kxrGJSlIMviaO/view?usp=sharing 


corejava day2 assignment link
https://drive.google.com/file/d/1q_bn5w1KYwx8cFCQ_UYcOrFpxSys4ehw/view?usp=sharing


slide link 
corejava 
https://drive.google.com/drive/folders/1M-dnYiUl287n7gVqex_G3wGODyRzctaO?usp=sharing

github link
https://github.com/shankar-trainer/hello-world/tree/lpu_batch2_22


java -- interpretter 
javac  -- compiler 


jdk -- java development kit (javac , java )
jre -- java runtime environment (java interpretter)

IDE -- integrated development environment

       eclipse , intellij 
	   
	   eclipse -- IBM -- open source 
	   
	   -->incremental compilation 
	   -->intellisense support 
	   --> debugger
       --> maven, gradle 
       --> perspective   	   



UserInput
  
  Scanner -- java.util
    nextInt()  -- int 
	nextFloat() -- float 
	nextDouble()  -- double 
    next()        -- String 
    nextLine()    -- multi word string 
	

by default 
   java.lang -- default package present in all classes
     Integer
	 Double 
	 Float
	 
	 
	Integer 
	
	 short ------------- java.lang.Short 
	 byte  -------------  Byte 
	 int --------------- java.lang.Integer
	 long -------------- java.lang.Long 
	 
	Decimal 
      float 
       double 
	   
    	  
	 
	 
	 class -- collection of obejcts with similar attribues and methods
	      --  conceptial entity 
     
	 object -- instance of class. real entity 
	 
	 
	 
	 
	 student1 (roll,name,subject)  |
	 student2 (roll,name,subject)  |   Student class  
	 
	 student3 (roll,name,subject)  | 
	 student4 (roll,name,subject)  |	
	 
	 each instance 
	   one copy of attribue +method 
	 
	 
	 
	 Encapsulation 
	   capsule -- content is hidden 
	   
	   state/data -- hidden -- private 
	   
	   public method -- code 
	   
	   bind code+data



 Constructor 
    two types 
	   1. default constructor 
	   2.overloaded constructor
	   


instance variable 
   --> associated with object/instance 
   --> each object has one copy of all instance variable 
   
   
static/ class variable    
  -->common variable -- to be shared by all objects    
  --> static members are created before the creation object 
  --> to access static members just use the class name 
  
   
   
   class Employee{
     int id;    // instance variable 
	 String name;
	 float salary;
   }

   emp1, emp2 


  java.lang -- default package 

  String, Integer,Float, Math 

   in Math class all variables and methods are static


 composition 
   -- has a relation 

   -- a class may composed of multiple   classes 
   -- a class can be used as the component/attribue of the class 


  class Employee {
    int id;
	String name;
	
	Address addr1;
	Car car;
	Birthday bday;
  }   
	   
	   Employee has an Address 
	   Employee has an car  
	   Employee has an birthday   
	   Employee has an phone    
	   
	   
	   
	   String 
	         --> immutable in nature 
	         --> immutable does not allow value to be changed 
             --> String literal is object itself;
			 
	 
	 
	 String Pool 
	 
	     String literal are create 
		 
		 
		    String  myname="elliot koffmain";   // String pool  obj1 
			     myname="abc";                  // new Object obj2 
				 
			   String  myname1="elliot koffmain";
			   String  myname2="elliot koffmain";
			   String  myname3="elliot koffmain";
	   
	 

Wrapper class 

primitive ---------------- Wrapper class

int             ----Integer 
float           ----Float
double          ----Double
 	 
	 
	 boxing -- primitive to wrapper class 
	 unboxing --  wrapper class to primitive 

  jdk1.5
    Autoboxing=boxing+unboxing 
	  
	  inheritance
	 
	 Parent/Base class
	 Employee(id,name,salary) 
	     |
		 |
		 v
	 Manager (id,name,salary)  	 
		  child class 
		 
		 
		 
	 
	 one -- 1
	 three  --3 
	 two 
	 four
	 five 
	 eight
	 
	 132458
	 
	 java cmdargs  one five nine seven 
	 
	 
	 
	 final 
	    -- declare constant variable 
		--final  method --- cannot be overriden 
		-- final class  ---  cannot be extended 
		
		local variable  can be only final 
		
	 
	 
	    Person
		  -- Passenger 
		  -- Manager 
		  -- Patient
          -- Father
		  
		  a class can have one default constructor and multiple overloaded constructor
		  --> if a class have  overloaded constructor then no default constructor is added by compiler 
		  
		  
		  
		  super()  -- call super class constructor
		  this()  -- call current class constructor
		  
		  
		  super -- to call super class  variable and method  
		  this -- call current class variable and methods
		  
		  
		  abstraction feature 
		       -- class should have abstract/essential method 
			   
		 in java no multiple inheritance is allowed

         interface 

		       -- 100% abstract class 
			   -- all methods are public and abstract 
			   -- allows multiple inheritance feature 
			   -- one interface can extends more than one interface 
			   -- a class can extend one class but can implement multiple interface
			   
			   -- all variables are public static final in nature 
			   
			   
			   
			   
		  
		  
		  
		  
		  
 		  
		  
	 
	 
	 
	 
	 

	 
	 





  
