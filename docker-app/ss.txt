    1  docker
    2  java
    3  ping -t www.google.com
    4  ping  www.google.com
    5  su
    6  sudo -i
    7  sudo apt install docker.io
    8  sudo -i
    9  sudo apt update
   10  sudo apt install apt-transport-https ca-certificates curl software-properties-common
   11  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   12  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
   13  sudo apt update
   14  apt-cache policy docker-ce
   15  sudo apt install docker-ce
   16  sudo systemctl start docker
   17  sudo systemctl enable docker
   18  docker -version
   19  docker --version
   20  ipconfig
   21  ip -c a
   22  init 0
   23  startx
   24  sudo init 1
   25  ip
   26  ip address
   27  rre
   28  clear
   29  cal
   30  java
   31  perl
   32  clear
   33  ip address
   34  clear
   35  ip address
   36  link www.google.com
   37  elinks 
   38  sudo ap install elinks
   39  sudo apt install elinks
   40  sudo service ssh status
   41  sudo apt install openssh-server
   42  sudo service ssh status
   43  elink www.google.com
   44  elinks  www.google.com
   45  ip address
   46  perl -v
   47  sudo init 0
   48  ls
   49  ip addr
   50  clear
   51  ls Downloads/
   52  firefox
   53  startx
   54  ls
   55  vim README.md 
   56  ps -A
   57  kill -9 4213
   58  cd Downloads/
   59  ls
   60  zip x spring-boot-data-jpa-mysql-docker-composer-master.zip 
   61  ls
   62  zip  man
   63  zip/?
   64  zip --help
   65  unzip spring-boot-data-jpa-mysql-docker-composer-master.zip 
   66  unzip  docker-hello-world-spring-boot-master.zip 
   67  ls
   68  rm x.zip 
   69  cd docker-hello-world-spring-boot-master/
   70  ls
   71  gedit README.md  &
   72  ls
   73  docker build -t ="hello-world-java"
   74  docker build -t="hello-world-java"
   75  docker build -t="hello-world-java" .
   76  sudo docker build -t="hello-world-java" .
   77  sudo docker run -p  8080:8080  -it --rm hello-world-java 
   78  cd ..
   79  cd spring-boot-data-jpa-mysql-docker-composer-master/
   80  ls
   81  gedit readme.txt  &
   82  clear
   83  ls
   84  sudo mvn clean install
   85  docker run -d       -p 2012:3306      --name mysql-docker-container      -e MYSQL_ROOT_PASSWORD=root123      -e MYSQL_DATABASE=spring_app_db      -e MYSQL_USER=app_user      -e MYSQL_PASSWORD=test123         mysql:latest
   86  sudo docker run -d       -p 2012:3306      --name mysql-docker-container      -e MYSQL_ROOT_PASSWORD=root123      -e MYSQL_DATABASE=spring_app_db      -e MYSQL_USER=app_user      -e MYSQL_PASSWORD=test123         mysql:latest
   87  sudo docker build -f Dockerfile -t spring-app-jpa-container .
   88  sudo docker run -d       -p 2012:3306      --name mysql-docker-container      -e MYSQL_ROOT_PASSWORD=root123      -e MYSQL_DATABASE=spring_app_db      -e MYSQL_USER=app_user      -e MYSQL_PASSWORD=test123         mysql:latest
   89  javac 
   90  nautilus . &
   91  init 0
   92  history >> ss.txt
    1  docker
    2  java
    3  ping -t www.google.com
    4  ping  www.google.com
    5  su
    6  sudo -i
    7  sudo apt install docker.io
    8  sudo -i
    9  sudo apt update
   10  sudo apt install apt-transport-https ca-certificates curl software-properties-common
   11  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   12  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
   13  sudo apt update
   14  apt-cache policy docker-ce
   15  sudo apt install docker-ce
   16  sudo systemctl start docker
   17  sudo systemctl enable docker
   18  docker -version
   19  docker --version
   20  ipconfig
   21  ip -c a
   22  init 0
   23  startx
   24  sudo init 1
   25  ip
   26  ip address
   27  rre
   28  clear
   29  cal
   30  java
   31  perl
   32  clear
   33  ip address
   34  clear
   35  ip address
   36  link www.google.com
   37  elinks 
   38  sudo ap install elinks
   39  sudo apt install elinks
   40  sudo service ssh status
   41  sudo apt install openssh-server
   42  sudo service ssh status
   43  elink www.google.com
   44  elinks  www.google.com
   45  ip address
   46  perl -v
   47  sudo init 0
   48  ls
   49  ip addr
   50  clear
   51  ls Downloads/
   52  firefox
   53  startx
   54  ls
   55  vim README.md 
   56  ps -A
   57  kill -9 4213
   58  cd Downloads/
   59  ls
   60  zip x spring-boot-data-jpa-mysql-docker-composer-master.zip 
   61  ls
   62  zip  man
   63  zip/?
   64  zip --help
   65  unzip spring-boot-data-jpa-mysql-docker-composer-master.zip 
   66  unzip  docker-hello-world-spring-boot-master.zip 
   67  ls
   68  rm x.zip 
   69  cd docker-hello-world-spring-boot-master/
   70  ls
   71  gedit README.md  &
   72  ls
   73  docker build -t ="hello-world-java"
   74  docker build -t="hello-world-java"
   75  docker build -t="hello-world-java" .
   76  sudo docker build -t="hello-world-java" .
   77  sudo docker run -p  8080:8080  -it --rm hello-world-java 
   78  cd ..
   79  cd spring-boot-data-jpa-mysql-docker-composer-master/
   80  ls
   81  gedit readme.txt  &
   82  clear
   83  ls
   84  sudo mvn clean install
   85  docker run -d       -p 2012:3306      --name mysql-docker-container      -e MYSQL_ROOT_PASSWORD=root123      -e MYSQL_DATABASE=spring_app_db      -e MYSQL_USER=app_user      -e MYSQL_PASSWORD=test123         mysql:latest
   86  sudo docker run -d       -p 2012:3306      --name mysql-docker-container      -e MYSQL_ROOT_PASSWORD=root123      -e MYSQL_DATABASE=spring_app_db      -e MYSQL_USER=app_user      -e MYSQL_PASSWORD=test123         mysql:latest
   87  sudo docker build -f Dockerfile -t spring-app-jpa-container .
   88  sudo docker run -d       -p 2012:3306      --name mysql-docker-container      -e MYSQL_ROOT_PASSWORD=root123      -e MYSQL_DATABASE=spring_app_db      -e MYSQL_USER=app_user      -e MYSQL_PASSWORD=test123         mysql:latest
   89  javac 
   90  nautilus . &
   91  init 0
   92  clear
   93  ip a
   94  ls
   95  cd spring-boot-data-jpa-mysql-docker-composer-master/
   96  cd Downloads/
   97  cd spring-boot-data-jpa-mysql-docker-composer-master/
   98  ls
   99  jar cvf spring-boot-data-jpa-mysql-docker-composer-master .
  100  startx
  101  ls /media/
  102  mount /mnt/
  103  ls  /mnt/
  104  sudo mount /dev/sda1 /dev/userio 
  105  ls /dev/sda1
  106  ls /dev/sda
  107* ls /dev/sda1 /dev/sc
  108  history >>ss.txt
