
package com.cognizant.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Calculator", targetNamespace = "http://ws.cognizant.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Calculator {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "division", targetNamespace = "http://ws.cognizant.com/", className = "com.cognizant.ws.Division")
    @ResponseWrapper(localName = "divisionResponse", targetNamespace = "http://ws.cognizant.com/", className = "com.cognizant.ws.DivisionResponse")
    @Action(input = "http://ws.cognizant.com/Calculator/divisionRequest", output = "http://ws.cognizant.com/Calculator/divisionResponse")
    public int division(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiplicaation", targetNamespace = "http://ws.cognizant.com/", className = "com.cognizant.ws.Multiplicaation")
    @ResponseWrapper(localName = "multiplicaationResponse", targetNamespace = "http://ws.cognizant.com/", className = "com.cognizant.ws.MultiplicaationResponse")
    @Action(input = "http://ws.cognizant.com/Calculator/multiplicaationRequest", output = "http://ws.cognizant.com/Calculator/multiplicaationResponse")
    public int multiplicaation(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addition", targetNamespace = "http://ws.cognizant.com/", className = "com.cognizant.ws.Addition")
    @ResponseWrapper(localName = "additionResponse", targetNamespace = "http://ws.cognizant.com/", className = "com.cognizant.ws.AdditionResponse")
    @Action(input = "http://ws.cognizant.com/Calculator/additionRequest", output = "http://ws.cognizant.com/Calculator/additionResponse")
    public int addition(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "subtraction", targetNamespace = "http://ws.cognizant.com/", className = "com.cognizant.ws.Subtraction")
    @ResponseWrapper(localName = "subtractionResponse", targetNamespace = "http://ws.cognizant.com/", className = "com.cognizant.ws.SubtractionResponse")
    @Action(input = "http://ws.cognizant.com/Calculator/subtractionRequest", output = "http://ws.cognizant.com/Calculator/subtractionResponse")
    public int subtraction(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

}
