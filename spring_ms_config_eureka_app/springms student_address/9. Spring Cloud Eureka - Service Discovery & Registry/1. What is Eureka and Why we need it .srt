1
00:00:00,360 --> 00:00:05,100
Hello and welcome back for the upcoming lectures.

2
00:00:05,130 --> 00:00:12,150
We will be focusing on the service, discovery and registry of our micro services before jumping to

3
00:00:12,150 --> 00:00:16,710
that, let's first understand what is service discovery and why we needed.

4
00:00:17,560 --> 00:00:23,230
So if you are having the real time application, then you might be having hundreds of thousands of micro

5
00:00:23,230 --> 00:00:24,010
services, right.

6
00:00:24,290 --> 00:00:29,710
And it may be possible that many of your micro services are communicating with each other.

7
00:00:30,010 --> 00:00:34,960
It may be possible that one micro service is calling other five, 10 or 20 micro services.

8
00:00:34,960 --> 00:00:35,210
Right.

9
00:00:35,440 --> 00:00:38,110
It completely depends on your functionality.

10
00:00:39,090 --> 00:00:45,510
Now, say at any point one of your micro services changes its you are in or the board on which it's

11
00:00:45,510 --> 00:00:51,480
running now, that will be difficult for you because now you need to update that service.

12
00:00:51,480 --> 00:00:55,410
You are all in other micro services where it is being called.

13
00:00:56,010 --> 00:01:02,010
So when you have hundreds of micro services, it will take a lot of time and it's a big task for you.

14
00:01:02,610 --> 00:01:03,340
But don't worry.

15
00:01:03,600 --> 00:01:06,660
Here comes the service, discovery and Registry.

16
00:01:07,850 --> 00:01:14,600
So sprinklered provides sprinklered, UDCA, with which each of our microcircuits will register itself.

17
00:01:15,350 --> 00:01:18,800
So let's take our example student and address microscopist.

18
00:01:18,800 --> 00:01:19,070
Right.

19
00:01:19,430 --> 00:01:20,830
So this is Judicature.

20
00:01:21,140 --> 00:01:24,500
It's a server and basically it's a springboard application.

21
00:01:24,890 --> 00:01:31,280
Now, what will happen over both the micro services will register itself with the Eureka server and

22
00:01:31,280 --> 00:01:34,160
while registering it will use this service name.

23
00:01:34,460 --> 00:01:40,070
You remember this service name we provided into the application, but properties file for student.

24
00:01:40,400 --> 00:01:45,020
We have given the name student service and for address we have given address service.

25
00:01:45,980 --> 00:01:52,070
So Utica's arrival will create a register for it that this is the name of the service and this is the

26
00:01:52,070 --> 00:01:58,160
you are allowed that service saying for address and so many whatever micro services you how each of

27
00:01:58,160 --> 00:02:02,070
that micro services will register itself with the Utica server.

28
00:02:02,330 --> 00:02:08,260
The key is your service name and it will be having your Eurail on Witchboard.

29
00:02:08,270 --> 00:02:08,810
It's running.

30
00:02:08,810 --> 00:02:11,390
All the things will come to your account server.

31
00:02:12,310 --> 00:02:18,100
Now, in our example, student service is calling the military service and while calling it it is using

32
00:02:18,100 --> 00:02:18,440
this you.

33
00:02:18,470 --> 00:02:23,830
All right, this is the you are an op ed service running on eight zero eight two in our local.

34
00:02:24,970 --> 00:02:30,640
Now, if you are using the sprinklered Utica, then we just need to refer to the service name.

35
00:02:31,000 --> 00:02:35,310
So if we are calling the address service from the student service, we will be not referring to the

36
00:02:35,320 --> 00:02:41,610
quality of their service, but we will just refer to the name of the service that is address service.

37
00:02:42,220 --> 00:02:48,550
And the reason is that each of our micro services has registered itself with the Utica server and help

38
00:02:48,550 --> 00:02:50,380
provided the service name.

39
00:02:51,380 --> 00:02:57,460
So Unica server will have all the details that this is the service that is basically the service name

40
00:02:57,620 --> 00:03:03,330
and this is the you are allowed that service for same for other micro services adversaries.

41
00:03:03,350 --> 00:03:04,840
This is the you are a lot better service.

42
00:03:05,120 --> 00:03:10,520
So whenever our micro services will communicate with each other, we will be referring to the service

43
00:03:10,520 --> 00:03:12,230
name instead of you are in.

44
00:03:12,560 --> 00:03:15,790
Now, this UDCA server makes our life very easy.

45
00:03:16,190 --> 00:03:22,570
Say, for example, in future, this address service changes the board on which it's running from Ejiro

46
00:03:22,580 --> 00:03:24,730
eight two two nine zero nine two.

47
00:03:25,160 --> 00:03:29,120
We don't need to do anything in our student service or any other service.

48
00:03:29,420 --> 00:03:31,280
We're calling the address service.

49
00:03:31,280 --> 00:03:31,790
Why?

50
00:03:32,150 --> 00:03:34,820
Because we are referring to the address service name.

51
00:03:35,150 --> 00:03:39,790
We are not referring to the wall of address service that is localhost eight zero eight.

52
00:03:39,800 --> 00:03:45,800
To know when we are working with Unica Server, we will be not referring to other micro services.

53
00:03:45,800 --> 00:03:48,230
Biswal So that will be easy.

54
00:03:48,350 --> 00:03:53,930
If in future any micro service will change its Eurail or the board on which it's running, we don't

55
00:03:53,930 --> 00:03:55,160
need to do anything.

56
00:03:55,470 --> 00:04:01,970
The reason is that it will be handled by UDCA server because it is having the complete registry that

57
00:04:01,970 --> 00:04:07,760
OK, this service has changelog that you are on the board so it will update the registry.

58
00:04:07,850 --> 00:04:09,470
We don't need to worry about it.

59
00:04:10,310 --> 00:04:16,760
So this is the Service Discovery and Registry for our micro services and Sprinklered provides sweating

60
00:04:16,760 --> 00:04:17,750
cloud Eureka.

61
00:04:17,870 --> 00:04:21,260
And that's what we are going to do in the upcoming lectures.

62
00:04:22,040 --> 00:04:23,450
So that's all for now.

63
00:04:23,810 --> 00:04:26,320
Will proceed further in the next lecture.

64
00:04:26,750 --> 00:04:27,710
Thank you very much.
