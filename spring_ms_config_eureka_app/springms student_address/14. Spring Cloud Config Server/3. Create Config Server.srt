1
00:00:00,650 --> 00:00:03,420
Hello and welcome back.

2
00:00:04,010 --> 00:00:10,110
In this lecture, we will create the configuration server, so that is basically a springboard application.

3
00:00:10,640 --> 00:00:11,540
So let's go for it.

4
00:00:13,670 --> 00:00:15,470
Let's create a new spring board application.

5
00:00:16,010 --> 00:00:17,400
The name is Config Server.

6
00:00:17,780 --> 00:00:22,160
This is the group that we want to help and artifact is config server.

7
00:00:22,760 --> 00:00:26,480
The package we want is come in, Pybus a click on the next.

8
00:00:26,930 --> 00:00:30,510
And here we need to add the dependencies config server.

9
00:00:30,530 --> 00:00:34,670
So just search for config server and this dependency.

10
00:00:35,060 --> 00:00:39,880
Now our config server application will register itself with Eureka server.

11
00:00:40,430 --> 00:00:43,480
So we also need to add the Eureka client dependency.

12
00:00:43,940 --> 00:00:49,640
So these two dependencies, we need to add in our config server application, click on the next and

13
00:00:49,640 --> 00:00:50,210
finish.

14
00:00:51,050 --> 00:00:55,200
So this might take a few seconds to a minute to download the required dependencies.

15
00:00:55,730 --> 00:00:56,210
Now.

16
00:00:57,450 --> 00:01:03,730
Let's go to the main class of this conflict, the replication, or just wait for a few more seconds.

17
00:01:03,750 --> 00:01:06,570
Yes, now we are good, I think.

18
00:01:06,600 --> 00:01:07,050
Yes.

19
00:01:07,690 --> 00:01:10,050
Open the main class here.

20
00:01:10,070 --> 00:01:11,820
We need to enable.

21
00:01:12,790 --> 00:01:13,580
Config are.

22
00:01:16,940 --> 00:01:22,130
Yeah, this one, so we are seeing that this is not the normal springboard application, but this is

23
00:01:22,130 --> 00:01:23,100
unfixable.

24
00:01:23,450 --> 00:01:29,780
Now, this application will register itself with Yuriko Starbright so we know how to do so.

25
00:01:29,780 --> 00:01:30,500
We will enable.

26
00:01:32,490 --> 00:01:33,670
You declined as well.

27
00:01:34,170 --> 00:01:39,530
So that's all we need to do in our meaningless now lets them do application properties.

28
00:01:40,080 --> 00:01:45,970
And here first, we'll start with Savar DART Board, equal to eight eight eight eight.

29
00:01:46,740 --> 00:01:50,890
So this is the port on which we are going to run our config server in local mussing.

30
00:01:51,480 --> 00:01:55,440
Now, the next is spring dart application.

31
00:01:55,440 --> 00:01:56,490
Dot name.

32
00:01:57,430 --> 00:02:00,220
Let's give a name as Confit Savar.

33
00:02:02,010 --> 00:02:09,420
Now we need to provide a legit repository, right, so for that, we need to set property a spring cloud.

34
00:02:10,500 --> 00:02:11,280
Config.

35
00:02:12,160 --> 00:02:12,820
Savar.

36
00:02:15,470 --> 00:02:16,700
DARD, Gitte.

37
00:02:20,010 --> 00:02:20,730
You are right.

38
00:02:20,910 --> 00:02:22,250
Yes, that's all we need to say.

39
00:02:22,740 --> 00:02:25,050
So for us, this is the report.

40
00:02:25,050 --> 00:02:28,810
You want to select this one and provide this like this.

41
00:02:29,190 --> 00:02:32,780
So make sure you are including file, because this is from our local machine.

42
00:02:32,790 --> 00:02:34,830
So you need to have this one in the starting.

43
00:02:35,160 --> 00:02:41,080
And then the part where you have this application that properties in our example address service, DOT

44
00:02:41,100 --> 00:02:41,780
properties.

45
00:02:42,300 --> 00:02:45,250
Now we need to register with UDCA server.

46
00:02:45,660 --> 00:02:47,850
So we need to provide you all of Eurekas.

47
00:02:47,880 --> 00:02:48,320
Right.

48
00:02:48,900 --> 00:02:51,460
So let's copy from one of the application.

49
00:02:52,470 --> 00:02:54,240
So this is the Eureka server.

50
00:02:54,360 --> 00:02:55,200
Let me copy.

51
00:02:56,650 --> 00:02:58,960
And we will put like this.

52
00:02:59,830 --> 00:03:05,170
So this is all we need to do in the main class, we need to enable the conflicts that over registered

53
00:03:05,170 --> 00:03:10,570
with Utica and we need to provide whatever triple and Utica what you are.

54
00:03:10,690 --> 00:03:16,510
This is the things that we are almost providing in any spring application, be it our micro service,

55
00:03:16,510 --> 00:03:21,870
EPA, Godwill or whatever it is right now, we are all set with our config server.

56
00:03:22,270 --> 00:03:28,900
So first we will start with Eureka Server and then we will start our config server application.

57
00:03:29,950 --> 00:03:32,110
So let's run it as a springboard application.

58
00:03:33,690 --> 00:03:38,580
You some time to end this conflict or application to register whether.

59
00:03:39,850 --> 00:03:41,030
Let's wait for a minute.

60
00:03:41,680 --> 00:03:44,150
Yeah, it got started on eight, eight, eight.

61
00:03:44,710 --> 00:03:52,090
Now let's turn to both men and hear the wall of conflicts over localhost.

62
00:03:53,290 --> 00:03:59,110
Edit, edit now what service we are looking for, for us address service.

63
00:03:59,140 --> 00:04:05,290
So this is the service name now profile is default, so less default.

64
00:04:09,750 --> 00:04:16,470
So we got the response, let's get out what we are getting to this is the report where we help address

65
00:04:16,500 --> 00:04:17,400
the properties.

66
00:04:19,470 --> 00:04:24,930
And these are the properties it is getting from this particular properties that we have in this report.

67
00:04:25,650 --> 00:04:32,760
So if you open this one see three, four, five, six, total six properties we have and here we are

68
00:04:32,760 --> 00:04:33,890
getting six properties.

69
00:04:34,530 --> 00:04:40,020
So this is how you can retrieve what properties inside a particular profile you want to know for your

70
00:04:40,020 --> 00:04:44,100
conflicts in the name of your groceries and sless profile.

71
00:04:44,550 --> 00:04:47,820
For now, we just have the full profile and upcoming lichter's.

72
00:04:47,820 --> 00:04:53,070
We will see how to have different profiles like Del Dewey or whatever it is.

73
00:04:53,400 --> 00:05:00,120
But for now, if you are not provide anything right like address, service or properties, then by default

74
00:05:00,150 --> 00:05:01,710
this profile is default.

75
00:05:02,770 --> 00:05:08,740
So now we are ready with our convict server now in the next lecture, we will prepare our address service

76
00:05:08,740 --> 00:05:15,160
so that it can use config server and fetch the required properties from here that we provided in the

77
00:05:15,450 --> 00:05:19,100
triple, but not directly using the config server.

78
00:05:19,540 --> 00:05:22,400
So that's all we are going to do in the next lecture.

79
00:05:22,930 --> 00:05:24,690
So that's all for now.

80
00:05:25,120 --> 00:05:26,530
We'll see in the next lecture.

81
00:05:26,890 --> 00:05:27,730
Thank you very much.
