Question Interface

You are given an interface AdvancedArithmetic which contains a method signature int divisor_sum(int n). 
You need to write a class called MyCalculator which implements the interface.

divisorSum function just takes an integer as input and return the sum of all its divisors.

 For example divisors of 6 are 1, 2, 3 and 6, so divisor_sum should return 12. The value of n will be at most 1000.
Read the partially completed code in the editor and complete it. 

You just need to write the MyCalculator class only. Your class shouldn't be public.

Sample Input
6

Sample Output
I implemented: AdvancedArithmetic
12

Explanation
Divisors of 6 are 1,2,3 and 6. 1+2+3+6=12.

String Question

Question 
 Take a String from user and check whether 
    it is palindrome.
For this make one static boolean 
   checkPalindrome(String s) method.
 
Question 
 Take a multi words String from user and display
 the count of vowel and space.  
    For this make method 
    int [] countVowelSpace(String s)
  
    ball    -----------> player1 --------->player2
	
	
Exception Question
	
	
Java has built-in mechanism to handle exceptions. Using the try statement we can test a block of code for errors. The catch block contains the code that says what to do if exception occurs. 

This problem will test your knowledge on try-catch block.
You will be given two integers and as input, you have to compute .

If and are not bit signed integers or if is zero, exception will occur and you have to report it. 
Read sample Input/Output to know what to report in case of exceptions.

Sample Input :
10
3
Sample Output :
3

Sample Input :
10
Hello
Sample Output :
java.util.InputMismatchException

Sample Input :
10
0
Sample Output :
java.lang.ArithmeticException: / by zero

Sample Input :
23.323
0
Sample Output :
java.util.InputMismatchException


	Exception Question 2
	
You are required to compute the power of a number by implementing a calculator.
 
Create a class MyCalculator which consists of a single method long power(int, int). 

This method takes two integers, and , as parameters and finds . 
If either or is negative, then the method must throw an exception which says "". 
Also, if both and are zero, then the method must throw an exception which says ""

For example, -4 and -5 would result in .

Complete the function power in class MyCalculator and return the appropriate result after the power operation or an appropriate exception as detailed above. 
Sample Input: 
3 5
2 4
0 0
-1 -2
-1 3
Sample Output: 
243
16
java.lang.Exception: n and p should not be zero.
java.lang.Exception: n or p should not be negative.
java.lang.Exception: n or p should not be negative.	
     
	
	                       catch
	palyer1 --------------palyer2----------------palyer3
	                         re throw  
	